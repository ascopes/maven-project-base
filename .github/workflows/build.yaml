name: Build
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]
  push:
    branches: [ main ]

jobs:
  checkstyle:
    name: Code style and licenses
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'

      - name: Run checks
        run: >-
          ./mvnw 
          -B 
          -T8C
          -U
          --no-transfer-progress
          -DskipTests=true
          -Dstyle.color=always
          -Dmaven.main.skip
          -Dmaven.jar.skip
          -Dmaven.resources.skip
          -Dmaven.test.skip
          verify

  # codeql:
  #   name: Run CodeQL Analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: java

  #     - name: Build project
  #       run: >-
  #         ./mvnw
  #         -B
  #         -T8C
  #         -U
  #         --no-transfer-progress
  #         -Dmaven.test.skip=true
  #         -Dcheckstyle.skip=true
  #         -Dlicense.skip=true
  #         -DskipTests
  #         -Dstyle.color=always
  #         clean package
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2

  test:
    name: Run tests
    runs-on: ubuntu-latest

    # Enables adding a comment to PRs with test results.
    permissions:
      checks: write
      pull-requests: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Needed to keep actions working correctly.
          fetch-depth: 2

      - name: Initialize JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '19'

      - name: Compile and run tests
        run: >-
          ./mvnw
          -B 
          -T8C
          -U
          --no-transfer-progress
          '-Dcheckstyle.skip=true'
          '-Dlicense.skip=true'
          '-Dstyle.color=always'
          clean verify

      - name: Archive Surefire and Jacoco reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: |
            **/target/surefire-reports/*.xml
            **/target/surefire-reports/*.txt
            **/target/site/jacoco/jacoco*.xml
          retention-days: 5

      - name: Publish to codecov
        continue-on-error: true
        if: always()
        run: |-
          curl --fail https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl --fail -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          shasum -a 256 -c codecov.SHA256SUM
          chmod -v +x codecov
          ./codecov 
      
      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        continue-on-error: true
        with:
          junit_files: "artifacts/**/TEST-*.xml"